<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC '-//ibatis.apache.org//DTD Sql Map 2.0//EN' 'http://ibatis.apache.org/dtd/sql-map-2.dtd'>
<sqlMap>

	<sql id="getEventList">
		select enumber, ename, eimg, sdate, edate, wcouples, regdate, wnumber, w, r from 
		(select enumber, ename, eimg, sdate, edate, wcouples, regdate, wnumber, w, rownum r from 
		(select enumber, ename, eimg, sdate, edate, wcouples, regdate, wnumber, w from event 
	</sql>
	
	<select id="eventIng" resultClass="project.bean.EventDataBean" parameterClass="java.util.Map">
		<include refid="getEventList"/> where <![CDATA[sdate<=to_char(sysdate,'yyyy-mm-dd')]]> and edate>=to_char(sysdate,'yyyy-mm-dd')) order by enumber desc) 
		where r>=#startRow# and <![CDATA[r<=#endRow#]]> 
	</select>
	
	<select id="eventEnd" resultClass="project.bean.EventDataBean" parameterClass="java.util.Map">
		<include refid="getEventList"/> where <![CDATA[sdate<=to_char(sysdate,'yyyy-mm-dd')]]> and <![CDATA[edate<=to_char(sysdate,'yyyy-mm-dd')]]> ) order by enumber desc) 
		where r>=#startRow# and <![CDATA[r<=#endRow#]]> 
	</select>
	
	<select id="eventEndS" resultClass="project.bean.EventDataBean" parameterClass="java.util.Map">
		<include refid="getEventList"/> where <![CDATA[sdate<=to_char(sysdate,'yyyy-mm-dd')]]> and <![CDATA[edate<=to_char(sysdate,'yyyy-mm-dd')]]> and w=#w#) order by enumber asc) 
		where r>=#startRow# and <![CDATA[r<=#endRow#]]> 
	</select>
	
	<select id="upcomingEvent" resultClass="project.bean.EventDataBean" parameterClass="java.util.Map">
		<include refid="getEventList"/> where sdate>to_char(sysdate,'yyyy-mm-dd')) order by enumber desc) 
		where r>=#startRow# and <![CDATA[r<=#endRow#]]> 
	</select>
	
	<sql id="count">
		select count(*) from event where 
	</sql>
	
	<select id="countIng" resultClass="int" parameterClass="project.bean.EventDataBean">
		<include refid="count"/> <![CDATA[sdate<=to_char(sysdate,'yyyy-mm-dd')]]> and edate>=to_char(sysdate,'yyyy-mm-dd')
	</select>	
	
	<select id="countEnd" resultClass="int" parameterClass="project.bean.EventDataBean">
		<include refid="count"/> <![CDATA[sdate<=to_char(sysdate,'yyyy-mm-dd')]]> and <![CDATA[edate<=to_char(sysdate,'yyyy-mm-dd')]]>
	</select>	
	
	<select id="countEndS" resultClass="int" parameterClass="int">
		<include refid="count"/> <![CDATA[sdate<=to_char(sysdate,'yyyy-mm-dd')]]> and <![CDATA[edate<=to_char(sysdate,'yyyy-mm-dd')]]> and w=#w#
	</select>	
	
	<select id="upcomingCount" resultClass="int" parameterClass="project.bean.EventDataBean">
		<include refid="count"/> sdate>to_char(sysdate,'yyyy-mm-dd')
	</select>
	
	<insert id="addEvent" parameterClass="project.bean.EventDataBean">
		insert into event (enumber, ename, eimg, sdate, edate, wnumber, regdate) values 
		(event_seq.nextval, #ename#, #eimg#, #sdate#, #edate#, #wnumber#, sysdate)
	</insert>
	
	<select id="eventContent" resultClass="project.bean.EventDataBean" parameterClass="int">
		select * from event where enumber=#enumber#
	</select>
	
	<sql id="getAppList">
		select appnumber, enumber, couplename, appsubject, appcomment, appimg, apppw, regdate, r from 
		(select appnumber, enumber, couplename, appsubject, appcomment, appimg, apppw, regdate, rownum r from 
		(select appnumber, enumber, couplename, appsubject, appcomment, appimg, apppw, regdate from app_event 
	</sql>
	
	<select id="eventApp" resultClass="project.bean.EventDataBean" parameterClass="java.util.Map">
		<include refid="getAppList"/> where enumber=#enumber#) order by appnumber desc) 
		where r>=#startRow# and <![CDATA[r<=#endRow#]]> 
	</select>
	
	<select id="eventAppAdmin" resultClass="String" parameterClass="int">
		select wcouples from event where enumber=#enumber#
	</select>
	
	<select id="eventAppAll" resultClass="project.bean.EventDataBean" parameterClass="int">
		select * from app_event where enumber=#enumber#
	</select>
	
	<select id="selectid" parameterClass="ch11.logon.CoupleDataBean" resultClass="ch11.logon.CoupleDataBean">
		select * from dc_couple where coupleName=#coupleName#
	</select>
	
	<select id="countCN" parameterClass="String" resultClass="int">
		select count(*) from dc_couple where id1=#id# or id2=#id# 
	</select>
	
	<select id="selectCouplename" parameterClass="String" resultClass="String">
		select coupleName from dc_couple where id1=#id# or id2=#id#
	</select>
	
	<select id="checkW" parameterClass="String" resultClass="project.bean.EventDataBean">
		select * from event_a where couplename=#couplen#
	</select>
	
	<select id="checkW2" parameterClass="project.bean.EventDataBean" resultClass="project.bean.EventDataBean">
		select * from event_a where couplename=#couplename# and enumber=#enumber#
	</select>
		
	<insert id="insertA" parameterClass="project.bean.EventDataBean">
		insert into event_a (anumber, enumber, couplename, regdate) values (event_a_seq.nextval, #enumber#, #couplename#, sysdate)
	</insert>
	
	<select id="eventAppCount" resultClass="int" >
		select count(*) from app_event where enumber=#enumber#
	</select>	

	<insert id="addApp" parameterClass="project.bean.EventDataBean">
		insert into app_event (appnumber, enumber, couplename, appsubject, appcomment, apppw, appimg, regdate) values (app_event_seq.nextval, #enumber#, #couplename#, #appsubject#, #appcomment#, #apppw#, #appimg#, sysdate)
	</insert>
	
	<select id="cnCon" resultClass="int" parameterClass="project.bean.EventDataBean"> 
		select count(*) from app_event where couplename=#couplename# and enumber=#enumber#
	</select>	
	
	<select id="getAppContent" resultClass="project.bean.EventDataBean" parameterClass="int">
		select * from app_event where appnumber=#appnumber#
	</select>
	
	<update id="modifyEvent" parameterClass="project.bean.EventDataBean">
		update event set ename=#ename#, eimg=#eimg#, sdate=#sdate#, edate=#edate#, wnumber=#wnumber#, regdate=sysdate where enumber=#enumber#
	</update>
	 
	<delete id="deleteEvent" parameterClass="int">
		delete from event where enumber=#enumber#
	</delete>
		
	<select id="eventImg" resultClass="String" parameterClass="int">
		select eimg from event where enumber=#enumber#
	</select>
	
	<update id="addW" parameterClass="project.bean.EventDataBean">
		update event set wcouples=#wcouples#, w=#w# where enumber=#enumber#
	</update>
	
	<update id="appModify" parameterClass="project.bean.EventDataBean">
		update app_event set appsubject=#appsubject#, appcomment=#appcomment#, appimg=#appimg# where appnumber=#appnumber#
	</update>
	
	<delete id="appDelete" parameterClass="int">
		delete from app_event where appnumber=#appnumber#
	</delete>
	
	<select id="confirmPw" resultClass="int" parameterClass="project.bean.EventDataBean">
		select count(*) from app_event where apppw=#apppw# and appnumber=#appnumber#
	</select>
	
	<update id="deleteWcouples" parameterClass="project.bean.EventDataBean">
		update event set wcouples=#wcouples# where enumber=#enumber#
	</update>

	<select id="wcount" resultClass="String" parameterClass="int">
		select wcouples from event where enumber=#enumber#
	</select>
	
	<select id="getCouplename" resultClass="String" parameterClass="String">
		select couplename from dc_couple where id1=#id# or id2=#id#
	</select>
	
	<select id="selectCh" resultClass="project.bean.EventDataBean" parameterClass="project.bean.EventDataBean">
		select * from event_a where couplename=#couplename# and enumber=#enumber#
	</select>
	
	<select id="checkcount" resultClass="int" parameterClass="String">
		select count(*) from event_a where couplename=#couplename# 
	</select>
	
	<select id="checkcount2" resultClass="int" parameterClass="project.bean.EventDataBean">
		select count(*) from event_a where couplename=#couplename# and enumber=#enumber#
	</select>
	
	<update id="checknumU" parameterClass="project.bean.EventDataBean">
		update event_a set checknum=1 where enumber=#enumber# and couplename=#couplename#
	</update>
	
	<update id="updateWn" parameterClass="project.bean.EventDataBean">
		update event_a set checknum=-1 where enumber=#enumber# and anumber=#anumber#
	</update>
</sqlMap>
